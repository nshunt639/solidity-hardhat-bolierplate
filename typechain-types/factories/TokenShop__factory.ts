/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenShop, TokenShopInterface } from "../TokenShop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "contract Membership",
        name: "membership_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenUsedForPayement_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenContract_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CapitalWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenOnSaleWithdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "crowdSaleOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalanceOfToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "membership",
    outputs: [
      {
        internalType: "contract Membership",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raisedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setCrowdSaleState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenUsedForPayement",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensBoughtByBuyer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawRaisedCapital",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokensOnSale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d85380380610d8583398101604081905261002f916100e9565b61003f61003a610095565b610099565b600480546001600160a01b03199081166001600160a01b0397881617909155600180548216958716959095179094556003805485169386169390931790925560028054909316931692909217905560055561016b565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080600060a08688031215610100578081fd5b855161010b81610153565b602087015190955061011c81610153565b604087015190945061012d81610153565b606087015190935061013e81610153565b80925050608086015190509295509295909350565b6001600160a01b038116811461016857600080fd5b50565b610c0b8061017a6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806398d5fdca116100a2578063de3680aa11610071578063de3680aa146101d1578063f2fde38b146101d9578063f6b3b84a146101ec578063f7a45241146101ff578063fa7a30b9146102125761010b565b806398d5fdca146101b1578063a035b1fe146101b9578063a2bf68b9146101c1578063c59ee1dc146101c95761010b565b80636009eed3116100de5780636009eed314610177578063715018a61461018c5780638da5cb5b1461019657806391b7f5ed1461019e5761010b565b80633610724e14610110578063405915191461013a5780634536f8c71461014d57806355a373d614610162575b600080fd5b61012361011e3660046109dd565b610228565b604051610131929190610a7b565b60405180910390f35b6101236101483660046109dd565b610494565b61015561059c565b6040516101319190610b7f565b61016a610627565b6040516101319190610a0d565b61017f610636565b6040516101319190610a5e565b61019461063f565b005b61016a610688565b6101236101ac3660046109dd565b610697565b610155610710565b610155610716565b61016a61071c565b61015561072b565b61016a610731565b6101946101e736600461098f565b610740565b6101556101fa36600461098f565b6107b1565b61012361020d3660046109dd565b6107c3565b61021a6108bb565b604051610131929190610a69565b600154604051627eeac760e11b815260009182916001600160a01b039091169062fdd58e9061025d9033908590600401610a45565b60206040518083038186803b15801561027557600080fd5b505afa158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad91906109f5565b6102d25760405162461bcd60e51b81526004016102c990610ad1565b60405180910390fd5b60075460ff166102f45760405162461bcd60e51b81526004016102c990610b13565b6000600554846103049190610ba0565b33600090815260086020526040812080549293508692909190610328908490610b88565b9250508190555080600660008282546103419190610b88565b90915550506003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061037a90339030908690600401610a21565b602060405180830381600087803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cc91906109bd565b5060025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906103ff9033908890600401610a45565b602060405180830381600087803b15801561041957600080fd5b505af115801561042d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045191906109bd565b507fae92ab4b6f8f401ead768d3273e6bb937a13e39827d19c6376e8fd4512a05d9a3385604051610483929190610a45565b60405180910390a150600193915050565b60008061049f61093b565b6001600160a01b03166104b0610688565b6001600160a01b0316146104d65760405162461bcd60e51b81526004016102c990610b4a565b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906105089033908790600401610a45565b602060405180830381600087803b15801561052257600080fd5b505af1158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906109bd565b507ff21cb237576772b55d882a9252b328a259ba6c87ee19d43de24c2a553780227c338460405161058c929190610a45565b60405180910390a1506001905091565b6002546040516370a0823160e01b815260009182916001600160a01b03909116906370a08231906105d1903090600401610a0d565b60206040518083038186803b1580156105e957600080fd5b505afa1580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062191906109f5565b91505090565b6002546001600160a01b031681565b60075460ff1681565b61064761093b565b6001600160a01b0316610658610688565b6001600160a01b03161461067e5760405162461bcd60e51b81526004016102c990610b4a565b61068661063f565b565b6000546001600160a01b031690565b6000806106a261093b565b6001600160a01b03166106b3610688565b6001600160a01b0316146106d95760405162461bcd60e51b81526004016102c990610b4a565b60058390556040517f8f012475d3b98d9007b927bfddd4f78c3e0465e69ec5d9795a19dbc3a04e0a689061058c9033908690610a45565b60055490565b60055481565b6001546001600160a01b031681565b60065481565b6003546001600160a01b031681565b61074861093b565b6001600160a01b0316610759610688565b6001600160a01b03161461077f5760405162461bcd60e51b81526004016102c990610b4a565b6001600160a01b0381166107a55760405162461bcd60e51b81526004016102c990610a8b565b6107ae8161093f565b50565b60086020526000908152604090205481565b6000806107ce61093b565b6001600160a01b03166107df610688565b6001600160a01b0316146108055760405162461bcd60e51b81526004016102c990610b4a565b60035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906108379033908790600401610a45565b602060405180830381600087803b15801561085157600080fd5b505af1158015610865573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088991906109bd565b507ffb35b373b75ffde9c4d321bd6402c04d4719e81228f60c40024bdb4aad8d3656338460405161058c929190610a45565b6000806108c661093b565b6001600160a01b03166108d7610688565b6001600160a01b0316146108fd5760405162461bcd60e51b81526004016102c990610b4a565b600061090761059c565b90508061091d576007805460ff1916905561092b565b6007805460ff191660011790555b50506007546001915060ff169091565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156109a0578081fd5b81356001600160a01b03811681146109b6578182fd5b9392505050565b6000602082840312156109ce578081fd5b815180151581146109b6578182fd5b6000602082840312156109ee578081fd5b5035919050565b600060208284031215610a06578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b91151582521515602082015260400190565b9115158252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f75736572206973206e6f7420796574204d656d626572206f6620746869732044604082015261414f60f01b606082015260800190565b6020808252601e908201527f546f6b656e2073616c652069732043757272656e746c7920636c6f7365640000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b60008219821115610b9b57610b9b610bbf565b500190565b6000816000190483118215151615610bba57610bba610bbf565b500290565b634e487b7160e01b600052601160045260246000fdfea26469706673582212203958cf4ee181f7c4301da6f69a054448a96ae220f1050d7317fca3969a3985a064736f6c63430008000033";

type TokenShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenShop__factory extends ContractFactory {
  constructor(...args: TokenShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    owner: string,
    membership_: string,
    tokenUsedForPayement_: string,
    tokenContract_: string,
    price_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenShop> {
    return super.deploy(
      owner,
      membership_,
      tokenUsedForPayement_,
      tokenContract_,
      price_,
      overrides || {}
    ) as Promise<TokenShop>;
  }
  getDeployTransaction(
    owner: string,
    membership_: string,
    tokenUsedForPayement_: string,
    tokenContract_: string,
    price_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      membership_,
      tokenUsedForPayement_,
      tokenContract_,
      price_,
      overrides || {}
    );
  }
  attach(address: string): TokenShop {
    return super.attach(address) as TokenShop;
  }
  connect(signer: Signer): TokenShop__factory {
    return super.connect(signer) as TokenShop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenShopInterface {
    return new utils.Interface(_abi) as TokenShopInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenShop {
    return new Contract(address, _abi, signerOrProvider) as TokenShop;
  }
}
