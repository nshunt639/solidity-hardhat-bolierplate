/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZION, ZIONInterface } from "../ZION";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "snapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601881527f5a494f4e202d20506f77657220746f2043726561746f727300000000000000006020808301918252835180850190945260048452632d24a7a760e11b90840152815191929162000073916003916200010f565b508051620000899060049060208401906200010f565b505050620000a6620000a0620000b960201b60201c565b620000bd565b6005805460ff60a01b19169055620001f2565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011d90620001b5565b90600052602060002090601f0160209004810192826200014157600085556200018c565b82601f106200015c57805160ff19168380011785556200018c565b828001600101855582156200018c579182015b828111156200018c5782518255916020019190600101906200016f565b506200019a9291506200019e565b5090565b5b808211156200019a57600081556001016200019f565b600281046001821680620001ca57607f821691505b60208210811415620001ec57634e487b7160e01b600052602260045260246000fd5b50919050565b61148980620002026000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b85780639711715a1161007c5780639711715a14610242578063981b24d01461024a578063a457c2d71461025d578063a9059cbb14610270578063dd62ed3e14610283578063f2fde38b1461029657610137565b806370a0823114610202578063715018a6146102155780638456cb591461021d5780638da5cb5b1461022557806395d89b411461023a57610137565b806339509351116100ff57806339509351146101b75780633f4ba83a146101ca57806340c10f19146101d45780634ee2cd7e146101e75780635c975abb146101fa57610137565b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017a57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102a9565b6040516101519190610ff7565b60405180910390f35b61016d610168366004610f97565b61033b565b6040516101519190610fec565b610182610359565b604051610151919061139c565b61016d61019d366004610f5c565b61035f565b6101aa6103f8565b60405161015191906113a5565b61016d6101c5366004610f97565b6103fd565b6101d2610451565b005b6101d26101e2366004610f97565b61049a565b6101826101f5366004610f97565b6104e7565b61016d610530565b610182610210366004610f10565b610540565b6101d261055f565b6101d26105a8565b61022d6105ef565b6040516101519190610fd8565b6101446105fe565b6101d261060d565b610182610258366004610fc0565b610657565b61016d61026b366004610f97565b610687565b61016d61027e366004610f97565b610700565b610182610291366004610f2a565b610714565b6101d26102a4366004610f10565b61073f565b6060600380546102b890611402565b80601f01602080910402602001604051908101604052809291908181526020018280546102e490611402565b80156103315780601f1061030657610100808354040283529160200191610331565b820191906000526020600020905b81548152906001019060200180831161031457829003601f168201915b5050505050905090565b600061034f6103486107ad565b84846107b1565b5060015b92915050565b60025490565b600061036c848484610865565b6001600160a01b03841660009081526001602052604081208161038d6107ad565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103d95760405162461bcd60e51b81526004016103d0906111ea565b60405180910390fd5b6103ed856103e56107ad565b8584036107b1565b506001949350505050565b601290565b600061034f61040a6107ad565b8484600160006104186107ad565b6001600160a01b03908116825260208083019390935260409182016000908120918b168152925290205461044c91906113b3565b6107b1565b6104596107ad565b6001600160a01b031661046a6105ef565b6001600160a01b0316146104905760405162461bcd60e51b81526004016103d090611232565b61049861098f565b565b6104a26107ad565b6001600160a01b03166104b36105ef565b6001600160a01b0316146104d95760405162461bcd60e51b81526004016103d090611232565b6104e38282610a00565b5050565b6001600160a01b03821660009081526006602052604081208190819061050e908590610ac8565b91509150816105255761052085610540565b610527565b805b95945050505050565b600554600160a01b900460ff1690565b6001600160a01b0381166000908152602081905260409020545b919050565b6105676107ad565b6001600160a01b03166105786105ef565b6001600160a01b03161461059e5760405162461bcd60e51b81526004016103d090611232565b6104986000610b74565b6105b06107ad565b6001600160a01b03166105c16105ef565b6001600160a01b0316146105e75760405162461bcd60e51b81526004016103d090611232565b610498610bc6565b6005546001600160a01b031690565b6060600480546102b890611402565b6106156107ad565b6001600160a01b03166106266105ef565b6001600160a01b03161461064c5760405162461bcd60e51b81526004016103d090611232565b610654610c27565b50565b6000806000610667846007610ac8565b915091508161067d57610678610359565b61067f565b805b949350505050565b600080600160006106966107ad565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156106e25760405162461bcd60e51b81526004016103d090611320565b6106f66106ed6107ad565b858584036107b1565b5060019392505050565b600061034f61070d6107ad565b8484610865565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107476107ad565b6001600160a01b03166107586105ef565b6001600160a01b03161461077e5760405162461bcd60e51b81526004016103d090611232565b6001600160a01b0381166107a45760405162461bcd60e51b81526004016103d0906110f2565b61065481610b74565b3390565b6001600160a01b0383166107d75760405162461bcd60e51b81526004016103d0906112ac565b6001600160a01b0382166107fd5760405162461bcd60e51b81526004016103d090611138565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061085890859061139c565b60405180910390a3505050565b6001600160a01b03831661088b5760405162461bcd60e51b81526004016103d090611267565b6001600160a01b0382166108b15760405162461bcd60e51b81526004016103d090611081565b6108bc838383610c7b565b6001600160a01b038316600090815260208190526040902054818110156108f55760405162461bcd60e51b81526004016103d09061117a565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061092c9084906113b3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610976919061139c565b60405180910390a3610989848484610cab565b50505050565b610997610530565b6109b35760405162461bcd60e51b81526004016103d0906110c4565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6109e96107ad565b6040516109f69190610fd8565b60405180910390a1565b6001600160a01b038216610a265760405162461bcd60e51b81526004016103d090611365565b610a3260008383610c7b565b8060026000828254610a4491906113b3565b90915550506001600160a01b03821660009081526020819052604081208054839290610a719084906113b3565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ab490859061139c565b60405180910390a36104e360008383610cab565b60008060008411610aeb5760405162461bcd60e51b81526004016103d0906112f0565b610af3610cb0565b841115610b125760405162461bcd60e51b81526004016103d09061104a565b6000610b1e8486610cc1565b8454909150811415610b37576000809250925050610b6d565b6001846001018281548110610b5c57634e487b7160e01b600052603260045260246000fd5b906000526020600020015492509250505b9250929050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610bce610530565b15610beb5760405162461bcd60e51b81526004016103d0906111c0565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109e96107ad565b6000610c336009610da0565b6000610c3d610cb0565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb6781604051610c6e919061139c565b60405180910390a1905090565b610c83610530565b15610ca05760405162461bcd60e51b81526004016103d0906111c0565b610cab838383610da9565b505050565b6000610cbc6009610e01565b905090565b8154600090610cd257506000610353565b82546000905b80821015610d3c576000610cec8383610e05565b905084868281548110610d0f57634e487b7160e01b600052603260045260246000fd5b90600052602060002001541115610d2857809150610d36565b610d338160016113b3565b92505b50610cd8565b600082118015610d7f57508385610d546001856113eb565b81548110610d7257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154145b15610d9857610d8f6001836113eb565b92505050610353565b509050610353565b80546001019055565b610db4838383610cab565b6001600160a01b038316610dd857610dcb82610e27565b610dd3610e51565b610cab565b6001600160a01b038216610def57610dcb83610e27565b610df883610e27565b610cab82610e27565b5490565b6000610e1460028484186113cb565b610e20908484166113b3565b9392505050565b6001600160a01b038116600090815260066020526040902061065490610e4c83610540565b610e5e565b6104986007610e4c610359565b6000610e68610cb0565b905080610e7484610ea8565b1015610cab578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b8054600090610eb95750600061055a565b81548290610ec9906001906113eb565b81548110610ee757634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905061055a565b80356001600160a01b038116811461055a57600080fd5b600060208284031215610f21578081fd5b610e2082610ef9565b60008060408385031215610f3c578081fd5b610f4583610ef9565b9150610f5360208401610ef9565b90509250929050565b600080600060608486031215610f70578081fd5b610f7984610ef9565b9250610f8760208501610ef9565b9150604084013590509250925092565b60008060408385031215610fa9578182fd5b610fb283610ef9565b946020939093013593505050565b600060208284031215610fd1578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101561102357858101830151858201604001528201611007565b818111156110345783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601d908201527f4552433230536e617073686f743a206e6f6e6578697374656e74206964000000604082015260600190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526016908201527504552433230536e617073686f743a20696420697320360541b604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b600082198211156113c6576113c661143d565b500190565b6000826113e657634e487b7160e01b81526012600452602481fd5b500490565b6000828210156113fd576113fd61143d565b500390565b60028104600182168061141657607f821691505b6020821081141561143757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208cebef5d48f820151714b652a7d7a10a703046ae2d323d9257b30751870132e064736f6c63430008000033";

type ZIONConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZIONConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZION__factory extends ContractFactory {
  constructor(...args: ZIONConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZION> {
    return super.deploy(overrides || {}) as Promise<ZION>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ZION {
    return super.attach(address) as ZION;
  }
  connect(signer: Signer): ZION__factory {
    return super.connect(signer) as ZION__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZIONInterface {
    return new utils.Interface(_abi) as ZIONInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZION {
    return new Contract(address, _abi, signerOrProvider) as ZION;
  }
}
